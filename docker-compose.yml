services:
  # Redis service for chat history
  redis:
    image: redis:7-alpine
    container_name: hr_chatbot_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hr_chatbot_network
    restart: unless-stopped

  # FastAPI application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hr_chatbot_api
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./:/app
    command: uvicorn api:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - hr_chatbot_network
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s

  # Streamlit application
  streamlit:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hr_chatbot_streamlit
    ports:
      - "8501:8501"
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./:/app
    command: streamlit run app.py --server.port=8501 --server.address=0.0.0.0
    networks:
      - hr_chatbot_network
    restart: unless-stopped

volumes:
  redis_data:
    driver: local

networks:
  hr_chatbot_network:
    driver: bridge